version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper
    volumes:
      - /home/azureuser/zookeeper/data:/opt/zookeeper-3.4.13/data

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: lab6-servicebased.eastus.cloudapp.azure.com # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://lab6-servicebased.eastus.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/azureuser/kafka:/kafka/kafka-logs
    depends_on:
      - "zookeeper"

  nginx:
    image: nginx:latest
    volumes:
      - /home/azureuser/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - "receiver"
      - "storage"
      - "processing"
      - "audit_log"
      - "dashboard"
    ports:
      - "80:80"
    networks:
      - "api.network"

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'macro_weight_tracker'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: '#4Havel'
      MYSQL_ROOT_PASSWORD: '#4Havel'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql


  Receiver:
    image: receiver
    ports:
      - "8080:8080"
    networks:
      - "api.network"    
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/receiver:/config
      - /home/azureuser/logs:/logs
    depends_on:
      - "kafka"


  storage:
    image: storage
    ports:
      - "8091:8091"
    networks:
      - "api.network"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/storage:/config
      - /home/azureuser/logs:/logs
    depends_on:
      - "kafka"
      - "db"
  
  processing:
    image: processing
    ports:
      - "8100:8100"
    networks:
      - "api.network"
    # network_mode: "host"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/processing:/config
      - /home/azureuser/logs:/logs
      - processing-db:/data
    depends_on:
      - "storage"

  audit:
    image: audit
    ports:
      - "8110:8110"
    networks:
      - "api.network"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/audit_log:/config
      - /home/azureuser/logs:/logs
    depends_on:
      - "kafka"

  dashboard:
    image: dashboard
    ports:
      - "3000:3000"
    networks:
      - "api.network"
    depends_on:
      - "processing"
      - "audit"
      
# Names our volume
volumes:
  my-db:
  processing-db:

networks:
  api.network:
